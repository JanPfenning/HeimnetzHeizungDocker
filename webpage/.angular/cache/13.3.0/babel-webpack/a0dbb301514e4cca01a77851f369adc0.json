{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./app.service\";\nimport * as i2 from \"./devices/devices.component\";\nimport * as i3 from \"./energy/energy.component\";\nimport * as i4 from \"./temperature/temperature.component\";\nimport * as i5 from \"@angular/router\";\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor(Service) {\n      this.Service = Service;\n      this.title = 'webpage';\n      this.serverHealth = -1;\n      this.wechselrichterHealth = -1;\n      this.tplinkHealth = -1;\n      this.databaseHealth = -1;\n      this.sensorHealth = -1;\n      this.brokerHealth = -1;\n      this.healthCheck();\n    }\n\n    healthCheck() {\n      this.showApiStatus();\n      this.showWechselrichterStatus();\n      this.showTpLinkCloudStatus();\n      this.showSensorStatus();\n      this.showBrokerStatus();\n      this.showDatabaseStatus();\n    }\n\n    showDatabaseStatus() {\n      this.databaseHealth = 0;\n      const subscription = this.Service.getDatabaseStatus().subscribe(data => {\n        //console.log(`Database: ${data}`)\n        this.databaseHealth = data ? 1 : -1;\n      }, error => {//this.serverHealth = -1\n        //console.log(error)\n      }, () => {\n        subscription.unsubscribe();\n      });\n    }\n\n    showApiStatus() {\n      this.serverHealth = 0;\n      const subscription = this.Service.getApiStatus().subscribe(data => {\n        //console.log(data)\n        this.serverHealth = 1;\n      }, error => {\n        this.serverHealth = -1; //console.log(error)\n      }, () => {\n        subscription.unsubscribe();\n      });\n    }\n\n    showWechselrichterStatus() {\n      this.wechselrichterHealth = 0;\n      const subscription = this.Service.getWechselrichterStatus().subscribe(data => {\n        //console.log(data)\n        this.wechselrichterHealth = data ? 1 : -1;\n      }, error => {//this.serverHealth = -1\n        //console.log(error)\n      }, () => {\n        subscription.unsubscribe();\n      });\n    }\n\n    showTpLinkCloudStatus() {\n      this.tplinkHealth = 0;\n      const subscription = this.Service.getTpLinkCloudStatus().subscribe(data => {\n        //console.log(data)\n        this.tplinkHealth = data ? 1 : -1;\n      }, error => {//this.serverHealth = -1\n        //console.log(error)\n      }, () => {\n        subscription.unsubscribe();\n      });\n    }\n\n    showSensorStatus() {\n      this.sensorHealth = 0;\n      const subscription = this.Service.getSensorStatus().subscribe(data => {\n        this.sensorHealth = data ? 1 : -1;\n      }, error => {//this.serverHealth = -1\n        //console.log(error)\n      }, () => {\n        subscription.unsubscribe();\n      });\n    }\n\n    showBrokerStatus() {\n      this.brokerHealth = 0;\n      const subscription = this.Service.getBrokerStatus().subscribe(data => {\n        //console.log(data)\n        this.brokerHealth = data ? 1 : -1;\n      }, error => {//this.serverHealth = -1\n        //console.log(error)\n      }, () => {\n        subscription.unsubscribe();\n      });\n    }\n\n  }\n\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.AppService));\n  };\n\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 35,\n    vars: 12,\n    consts: [[\"id\", \"statusbar\"], [1, \"statuselement\"], [\"id\", \"serverHealth\", 1, \"dot\"], [\"id\", \"wechselrichterHealth\", 1, \"dot\"], [\"id\", \"tplinkHealth\", 1, \"dot\"], [\"id\", \"espHealth\", 1, \"dot\"], [\"id\", \"brokerHealth\", 1, \"dot\"], [\"id\", \"databaseHealth\", 1, \"dot\"], [3, \"click\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"p\");\n        i0.ɵɵtext(2, \"Healthcheck:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 0)(4, \"div\", 1)(5, \"p\");\n        i0.ɵɵtext(6, \"Server\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"span\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 1)(9, \"p\");\n        i0.ɵɵtext(10, \"Wechselrichter\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"span\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 1)(13, \"p\");\n        i0.ɵɵtext(14, \"TP-Link-Cloud\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"span\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 1)(17, \"p\");\n        i0.ɵɵtext(18, \"Temperatur Sensor\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(19, \"span\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"div\", 1)(21, \"p\");\n        i0.ɵɵtext(22, \"Broker\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(23, \"span\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"div\", 1)(25, \"p\");\n        i0.ɵɵtext(26, \"Database\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(27, \"span\", 7);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(28, \"div\")(29, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_29_listener() {\n          return ctx.healthCheck();\n        });\n        i0.ɵɵtext(30, \"Check health\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(31, \"app-devices\")(32, \"app-energy\")(33, \"app-temperature\")(34, \"router-outlet\");\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵstyleProp(\"background\", ctx.serverHealth < 0 ? \"red\" : ctx.serverHealth > 0 ? \"green\" : \"yellow\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵstyleProp(\"background\", ctx.wechselrichterHealth < 0 ? \"red\" : ctx.wechselrichterHealth > 0 ? \"green\" : \"yellow\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵstyleProp(\"background\", ctx.tplinkHealth < 0 ? \"red\" : ctx.tplinkHealth > 0 ? \"green\" : \"yellow\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵstyleProp(\"background\", ctx.sensorHealth < 0 ? \"red\" : ctx.sensorHealth > 0 ? \"green\" : \"yellow\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵstyleProp(\"background\", ctx.brokerHealth < 0 ? \"red\" : ctx.brokerHealth > 0 ? \"green\" : \"yellow\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵstyleProp(\"background\", ctx.databaseHealth < 0 ? \"red\" : ctx.databaseHealth > 0 ? \"green\" : \"yellow\");\n      }\n    },\n    directives: [i2.DevicesComponent, i3.EnergyComponent, i4.TemperatureComponent, i5.RouterOutlet],\n    styles: [\".dot[_ngcontent-%COMP%]{height:1rem;width:1rem;background-color:#bbb;border-radius:50%;stroke:#000;stroke-width:1rem;display:inline-block}#statusbar[_ngcontent-%COMP%]{display:grid;grid-template-columns:1fr 1fr 1fr 1fr 1fr 1fr}.statuselement[_ngcontent-%COMP%]{display:grid;grid-template-rows:auto auto}.statuselement[_ngcontent-%COMP%]   p[_ngcontent-%COMP%], .statuselement[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{justify-self:center}\"]\n  });\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}